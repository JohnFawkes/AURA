# This file should be located in /config on the docker container

# CacheImages - Whether to cache images or not. Caching images can improve performance but will use more disk space.
# If set to true, images will be cached in the /config/temp-images directory.
CacheImages: true

# SaveImageNextToContent - Whether to save images next to the Media Server content or not.
# If set to true, images will be saved in the same directory as the Media Server content.
# If set to false, images will still be updated on the Media Server but will not be saved next to the content.
# The benefit of this is that you have local images that are not dependent on the Media Server database in case of migration.
# If you are using Emby or Jellyfin, this option being set does not matter. This is determined by Emby or Jellyfin.
# If you are using Plex, this option will determine if the images are saved next to the content or not.
SaveImageNextToContent: false

# Logging - Configuration for logging
#   Level - The level of logging. Can be one of: TRACE, DEBUG, INFO, WARNING, ERROR
Logging:
    Level: TRACE

# AutoDownload - Configuration for auto-downloading images
#   Enabled - Whether to enable auto-downloading of images or not.
#     You have the option when selecting a set to save it to the database.
#     This will look for updates to the set and download them automatically.
#   Cron - The cron schedule for auto-downloading images. This is a standard cron expression.
#     For example, "0 0 * * *" means every day at midnight
AutoDownload:
    Enabled: true
    Cron: "0 0 * * *"

# Notification - Configuration for notifications
#   Provider - The provider for notifications. Currently, the only provider is Discord.
#   Webhook - The webhook URL for the provider. This can be obtained by creating a webhook in Discord.
Notification:
    Provider: "Discord" 
    Webhook: "https://discord.com/api/webhooks/123456789/abcdefghijklmnopqrstuvwxyz" # Replace with your Discord webhook URL


# MediaServer - Configuration for your Media Server
#   Type - The type of Media Server. This can be one of: Plex, Jellyfin, Emby
#   URL - The URL of the Media Server. This should be the IP:Port of the Media Server or your Media Server reverse proxy domain.
#   Token - The token for the Media Server. This can be found in the Media Server web interface.
#   Libraries - A list of libraries to scan for images. Each library should have the following fields:
#     - Name: The name of the library to scan for content. Please note that this application will only work on Movies and Series libraries.
MediaServer:
    Type: "Plex" # The type of Media Server. This can be one of: Plex, Jellyfin, Emby
    URL: http://<MEDIA_SERVER_IP>:<MEDIA_SERVER_PORT> # Replace with your Media Server server IP and port
    Token: <MEDIA_SERVER_TOKEN> # Replace with your Media Server token
    Libraries:
        - Name: "Movies"
        - Name: "Series"
        - Name: "4K Movies"
        - Name: "4K Series"

# Kometa - Configuration for Kometa
#   RemoveLabels - Whether to remove labels or not. This will remove all specific labels from the Media Server Item.
Kometa:
    RemoveLabels: true
    Labels:
        - "Overlay"


# TMDB - Configuration for TMDB (The Movie Database) This is not used yet.
#   ApiKey - The API key for TMDB. This can be obtained by creating an account on TMDB and generating an API key.
TMDB:
    ApiKey: <YOUR_TMDB_API_KEY> # Replace with your TMDB API key

# Mediux - Configuration for Mediux
#   Token - The token for Mediux. This can be obtained by creating an account on Mediux and generating a static token.
Mediux:
    Token: <YOUR_MEDIUX_TOKEN> # Replace with your Mediux token
